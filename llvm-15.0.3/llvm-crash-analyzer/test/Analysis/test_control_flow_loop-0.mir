##include <stdlib.h>
# 
#int f2(char *input) { return crasher(input, 1); }
#int crasher(char *input, int crash) {
#  if (crash)
#    input = NULL;
#  input[0] = '1';
#  input[1] = '2';
#  input[2] = '3';
#  input[3] = '\0';
#  f2(input);
#  if (crash)
#    return 0;
#  else
#    return 1;
#}
#
#int f1() {
#  char *input = (char *)malloc(sizeof(char) * 10);
#  return crasher(input, 1);
#}
#int main(int argc, char **argv) {
#  f1();
#  return 0;
#}
# RUN: %llvm-crash-analyzer-ta %s | FileCheck %s
# CHECK: Blame Function is crasher 

--- |
  ; ModuleID = 'bin/test_control_flow_loop-0'
  source_filename = "bin/test_control_flow_loop-0"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  
  ; Materializable
  define void @crasher() !dbg !2 {
  entry:
    unreachable
  }
  
  declare void @f2()
  
  ; Materializable
  define void @f1() !dbg !5 {
  entry:
    unreachable
  }
  
  ; Materializable
  define void @f2.1() !dbg !6 {
  entry:
    unreachable
  }
  
  ; Materializable
  define void @main() !dbg !7 {
  entry:
    unreachable
  }
  
  !llvm.dbg.cu = !{!0}
  
  !0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "llvm-crash-analyzer", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
  !1 = !DIFile(filename: "/nobackup/bseshadr/llvm-crash-anal/c_test_cases/test_control_flow_loop.c", directory: "/")
  !2 = distinct !DISubprogram(name: "crasher", linkageName: "crasher", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !3 = !DISubroutineType(types: !4)
  !4 = !{}
  !5 = distinct !DISubprogram(name: "f1", linkageName: "f1", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !6 = distinct !DISubprogram(name: "f2.1", linkageName: "f2.1", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !7 = distinct !DISubprogram(name: "main", linkageName: "main", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)

...
---
name:            crasher
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '0x0000000000000000' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '0x0000000001f07260' }
    - { reg: rdx, value: '0x0000000001f07260' }
    - { reg: rdi, value: '0x0000000001f07260' }
    - { reg: rsi, value: '0x0000000000000001' }
    - { reg: rbp, value: '0x00007fff3e279f10' }
    - { reg: rsp, value: '0x00007fff3e279ef0' }
    - { reg: r8, value: '0x0000000000000000' }
    - { reg: r9, value: '0x0000000000000003' }
    - { reg: r10, value: '0x0000000001f07010' }
    - { reg: r11, value: '0x0000000000000020' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007fff3e27a090' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x00000000004005f5' }
    - { reg: rflags, value: '0x0000000000010202' }
    - { reg: cs, value: '0x0000000000000033' }
    - { reg: fs, value: '0x0000000000000000' }
    - { reg: gs, value: '0x0000000000000000' }
    - { reg: ss, value: '0x000000000000002b' }
    - { reg: ds, value: '0x0000000000000000' }
    - { reg: es, value: '0x0000000000000000' }
    - { reg: eax, value: '0x00000000' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '0x01f07260' }
    - { reg: edx, value: '0x01f07260' }
    - { reg: edi, value: '0x01f07260' }
    - { reg: esi, value: '0x00000001' }
    - { reg: ebp, value: '0x3e279f10' }
    - { reg: esp, value: '0x3e279ef0' }
    - { reg: r8d, value: '0x00000000' }
    - { reg: r9d, value: '0x00000003' }
    - { reg: r10d, value: '0x01f07010' }
    - { reg: r11d, value: '0x00000020' }
    - { reg: r12d, value: '0x004004c0' }
    - { reg: r13d, value: '0x3e27a090' }
    - { reg: r14d, value: '0x00000000' }
    - { reg: r15d, value: '0x00000000' }
    - { reg: ax, value: '0x0000' }
    - { reg: bx, value: '0x0000' }
    - { reg: cx, value: '0x7260' }
    - { reg: dx, value: '0x7260' }
    - { reg: di, value: '0x7260' }
    - { reg: si, value: '0x0001' }
    - { reg: bp, value: '0x9f10' }
    - { reg: sp, value: '0x9ef0' }
    - { reg: r8w, value: '0x0000' }
    - { reg: r9w, value: '0x0003' }
    - { reg: r10w, value: '0x7010' }
    - { reg: r11w, value: '0x0020' }
    - { reg: r12w, value: '0x04c0' }
    - { reg: r13w, value: '0xa090' }
    - { reg: r14w, value: '0x0000' }
    - { reg: r15w, value: '0x0000' }
    - { reg: ah, value: '0x00' }
    - { reg: bh, value: '0x00' }
    - { reg: ch, value: '0x72' }
    - { reg: dh, value: '0x72' }
    - { reg: al, value: '0x00' }
    - { reg: bl, value: '0x00' }
    - { reg: cl, value: '0x60' }
    - { reg: dl, value: '0x60' }
    - { reg: dil, value: '0x60' }
    - { reg: sil, value: '0x01' }
    - { reg: bpl, value: '0x10' }
    - { reg: spl, value: '0xf0' }
    - { reg: r8l, value: '0x00' }
    - { reg: r9l, value: '0x03' }
    - { reg: r10l, value: '0x10' }
    - { reg: r11l, value: '0x20' }
    - { reg: r12l, value: '0xc0' }
    - { reg: r13l, value: '0x90' }
    - { reg: r14l, value: '0x00' }
    - { reg: r15l, value: '0x00' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     1
body:             |
  bb.0:
    successors: %bb.1(0x40000000), %bb.2(0x40000000)
    liveins: $rbp, $rdi, $esi
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 5, scope: !2)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 5, scope: !2)
    $rsp = SUB64ri8 $rsp, 32, implicit-def $eflags, debug-location !DILocation(line: 5, scope: !2)
    MOV64mr $rbp, 1, $noreg, -16, $noreg, $rdi, debug-location !DILocation(line: 5, scope: !2)
    MOV32mr $rbp, 1, $noreg, -20, $noreg, $esi, debug-location !DILocation(line: 5, scope: !2)
    CMP32mi8 $rbp, 1, $noreg, -20, $noreg, 0, implicit-def $eflags, debug-location !DILocation(line: 6, column: 7, scope: !2)
    JCC_4 %bb.2, 4, implicit $eflags, debug-location !DILocation(line: 6, column: 7, scope: !2)
  
  bb.1:
    successors: %bb.2(0x80000000)
    liveins: $rbp
  
    MOV64mi32 $rbp, 1, $noreg, -16, $noreg, 0, debug-location !DILocation(line: 7, column: 11, scope: !2)
  
  bb.2:
    successors: %bb.3(0x40000000), %bb.4(0x40000000)
    liveins: $rbp
  
    $rax = MOV64rm $rbp, 1, $noreg, -16, $noreg, debug-location !DILocation(line: 8, column: 3, scope: !2)
    crash-start MOV8mi $rax, 1, $noreg, 0, $noreg, 49, debug-location !DILocation(line: 8, column: 12, scope: !2)
    $rax = MOV64rm $rbp, 1, $noreg, -16, $noreg, debug-location !DILocation(line: 9, column: 3, scope: !2)
    MOV8mi $rax, 1, $noreg, 1, $noreg, 50, debug-location !DILocation(line: 9, column: 12, scope: !2)
    $rax = MOV64rm $rbp, 1, $noreg, -16, $noreg, debug-location !DILocation(line: 10, column: 3, scope: !2)
    MOV8mi $rax, 1, $noreg, 2, $noreg, 51, debug-location !DILocation(line: 10, column: 12, scope: !2)
    $rax = MOV64rm $rbp, 1, $noreg, -16, $noreg, debug-location !DILocation(line: 11, column: 3, scope: !2)
    MOV8mi $rax, 1, $noreg, 3, $noreg, 0, debug-location !DILocation(line: 11, column: 12, scope: !2)
    $rdi = MOV64rm $rbp, 1, $noreg, -16, $noreg, debug-location !DILocation(line: 12, column: 6, scope: !2)
    CALL64pcrel32 @f2, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 12, column: 3, scope: !2)
    CMP32mi8 $rbp, 1, $noreg, -20, $noreg, 0, implicit-def $eflags, debug-location !DILocation(line: 13, column: 7, scope: !2)
    JCC_4 %bb.4, 4, implicit $eflags, debug-location !DILocation(line: 13, column: 7, scope: !2)
  
  bb.3:
    successors: %bb.5(0x80000000)
    liveins: $rbp
  
    MOV32mi $rbp, 1, $noreg, -4, $noreg, 0, debug-location !DILocation(line: 14, column: 5, scope: !2)
    JMP_4 %bb.5, debug-location !DILocation(line: 14, column: 5, scope: !2)
  
  bb.4:
    successors: %bb.5(0x80000000)
    liveins: $rbp
  
    MOV32mi $rbp, 1, $noreg, -4, $noreg, 1, debug-location !DILocation(line: 16, column: 5, scope: !2)
  
  bb.5:
    liveins: $rbp
  
    $eax = MOV32rm $rbp, 1, $noreg, -4, $noreg, debug-location !DILocation(line: 17, column: 1, scope: !2)
    $rsp = ADD64ri8 $rsp, 32, implicit-def $eflags, debug-location !DILocation(line: 17, column: 1, scope: !2)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 17, column: 1, scope: !2)
    RETQ debug-location !DILocation(line: 17, column: 1, scope: !2)

...
---
name:            f2.1
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x00007fff3e279f30' }
    - { reg: rsp, value: '0x00007fff3e279f20' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007fff3e27a090' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x00000000004005ca' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x3e279f10' }
    - { reg: esp, value: '0x3e279ef0' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x9ef0' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     2
body:             |
  bb.0:
    liveins: $rbp, $rdi
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 4, scope: !6)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 4, scope: !6)
    $rsp = SUB64ri8 $rsp, 16, implicit-def $eflags, debug-location !DILocation(line: 4, scope: !6)
    MOV64mr $rbp, 1, $noreg, -8, $noreg, $rdi, debug-location !DILocation(line: 4, scope: !6)
    $rdi = MOV64rm $rbp, 1, $noreg, -8, $noreg, debug-location !DILocation(line: 4, column: 38, scope: !6)
    $esi = MOV32ri 1, debug-location !DILocation(line: 4, column: 30, scope: !6)
    CALL64pcrel32 @crasher, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 4, column: 30, scope: !6)
    $rsp = crash-start ADD64ri8 $rsp, 16, implicit-def $eflags, debug-location !DILocation(line: 4, column: 23, scope: !6)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 4, column: 23, scope: !6)
    RETQ debug-location !DILocation(line: 4, column: 23, scope: !6)

...
---
name:            f1
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x00007fff3e279f80' }
    - { reg: rsp, value: '0x00007fff3e279f70' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007fff3e27a090' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x0000000000400661' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x3e279f10' }
    - { reg: esp, value: '0x3e279ef0' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x9ef0' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     4
body:             |
  bb.0:
    liveins: $rbp
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 19, scope: !5)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 19, scope: !5)
    $rsp = SUB64ri8 $rsp, 16, implicit-def $eflags, debug-location !DILocation(line: 19, scope: !5)
    $edi = MOV32ri 10, debug-location !DILocation(line: 20, column: 25, scope: !5)
    CALL64pcrel32 4195504, implicit $rsp, implicit $ssp, implicit-def $rax, debug-location !DILocation(line: 20, column: 25, scope: !5)
    $esi = XOR32rr undef $esi, undef $esi, implicit-def $eflags, debug-location !DILocation(line: 20, column: 25, scope: !5)
    MOV64mr $rbp, 1, $noreg, -8, $noreg, $rax, debug-location !DILocation(line: 20, column: 9, scope: !5)
    $rdi = MOV64rm $rbp, 1, $noreg, -8, $noreg, debug-location !DILocation(line: 21, column: 18, scope: !5)
    CALL64pcrel32 @crasher, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 21, column: 10, scope: !5)
    $rsp = crash-start ADD64ri8 $rsp, 16, implicit-def $eflags, debug-location !DILocation(line: 21, column: 3, scope: !5)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 21, column: 3, scope: !5)
    RETQ debug-location !DILocation(line: 21, column: 3, scope: !5)

...
---
name:            main
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x00007fff3e279fb0' }
    - { reg: rsp, value: '0x00007fff3e279f90' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x00000000004004c0' }
    - { reg: r13, value: '0x00007fff3e27a090' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x000000000040068b' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x3e279f10' }
    - { reg: esp, value: '0x3e279ef0' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x9ef0' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     5
body:             |
  bb.0:
    liveins: $rbp, $edi, $rsi
  
    PUSH64r $rbp, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 23, scope: !7)
    $rbp = MOV64rr $rsp, debug-location !DILocation(line: 23, scope: !7)
    $rsp = SUB64ri8 $rsp, 32, implicit-def $eflags, debug-location !DILocation(line: 23, scope: !7)
    MOV32mi $rbp, 1, $noreg, -4, $noreg, 0, debug-location !DILocation(line: 23, scope: !7)
    MOV32mr $rbp, 1, $noreg, -8, $noreg, $edi, debug-location !DILocation(line: 23, scope: !7)
    MOV64mr $rbp, 1, $noreg, -16, $noreg, $rsi, debug-location !DILocation(line: 23, scope: !7)
    CALL64pcrel32 @f1, csr_64, implicit $rsp, implicit $ssp, implicit-def $eax, debug-location !DILocation(line: 24, column: 3, scope: !7)
    $ecx = crash-start XOR32rr undef $ecx, undef $ecx, implicit-def $eflags, debug-location !DILocation(line: 24, column: 3, scope: !7)
    MOV32mr $rbp, 1, $noreg, -20, $noreg, $eax, debug-location !DILocation(line: 24, column: 3, scope: !7)
    $eax = MOV32rr $ecx, debug-location !DILocation(line: 25, column: 3, scope: !7)
    $rsp = ADD64ri8 $rsp, 32, implicit-def $eflags, debug-location !DILocation(line: 25, column: 3, scope: !7)
    $rbp = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 25, column: 3, scope: !7)
    RETQ debug-location !DILocation(line: 25, column: 3, scope: !7)

...
