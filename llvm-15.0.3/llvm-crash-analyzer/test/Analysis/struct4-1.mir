##include <stdio.h>
##include <stdlib.h>
#
#struct node {
#int a;
#char *b;
#int *c;
#};
#
#struct node *n;
#
#void foo(struct node *s) {
# printf("\n %s %d", s->b, *s->c);
#}
#
#int main() {
#  n = malloc(2);
#  foo(n);
#  return 0;
#}

## Wrong blame fn.

# XFAIL: *

# RUN: %llvm-crash-analyzer-ta %s | FileCheck %s
# CHECK: Blame Function is main

--- |
  ; ModuleID = 'bin/struct4-1'
  source_filename = "bin/struct4-1"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  
  ; Materializable
  define void @foo() !dbg !2 {
  entry:
    unreachable
  }
  
  ; Materializable
  define void @main() !dbg !5 {
  entry:
    unreachable
  }
  
  !llvm.dbg.cu = !{!0}
  
  !0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "llvm-crash-analyzer", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
  !1 = !DIFile(filename: "/nobackup/bseshadr/llvm-crash-anal/c_test_cases/struct4.c", directory: "/")
  !2 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !3 = !DISubroutineType(types: !4)
  !4 = !{}
  !5 = distinct !DISubprogram(name: "main", linkageName: "main", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)

...
---
name:            foo
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '0x0000000000000000' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '0x0000000000846260' }
    - { reg: rdx, value: '0x0000000000846260' }
    - { reg: rdi, value: '0x0000000000846260' }
    - { reg: rsi, value: '0x0000000000000000' }
    - { reg: rbp, value: '0x0000000000400630' }
    - { reg: rsp, value: '0x00007ffc2a59e1f0' }
    - { reg: r8, value: '0x0000000000000000' }
    - { reg: r9, value: '0x0000000000000003' }
    - { reg: r10, value: '0x0000000000846010' }
    - { reg: r11, value: '0x0000000000000020' }
    - { reg: r12, value: '0x0000000000400500' }
    - { reg: r13, value: '0x00007ffc2a59e2e0' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x00000000004005f9' }
    - { reg: rflags, value: '0x0000000000010206' }
    - { reg: cs, value: '0x0000000000000033' }
    - { reg: fs, value: '0x0000000000000000' }
    - { reg: gs, value: '0x0000000000000000' }
    - { reg: ss, value: '0x000000000000002b' }
    - { reg: ds, value: '0x0000000000000000' }
    - { reg: es, value: '0x0000000000000000' }
    - { reg: eax, value: '0x00000000' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '0x00846260' }
    - { reg: edx, value: '0x00846260' }
    - { reg: edi, value: '0x00846260' }
    - { reg: esi, value: '0x00000000' }
    - { reg: ebp, value: '0x00400630' }
    - { reg: esp, value: '0x2a59e1f0' }
    - { reg: r8d, value: '0x00000000' }
    - { reg: r9d, value: '0x00000003' }
    - { reg: r10d, value: '0x00846010' }
    - { reg: r11d, value: '0x00000020' }
    - { reg: r12d, value: '0x00400500' }
    - { reg: r13d, value: '0x2a59e2e0' }
    - { reg: r14d, value: '0x00000000' }
    - { reg: r15d, value: '0x00000000' }
    - { reg: ax, value: '0x0000' }
    - { reg: bx, value: '0x0000' }
    - { reg: cx, value: '0x6260' }
    - { reg: dx, value: '0x6260' }
    - { reg: di, value: '0x6260' }
    - { reg: si, value: '0x0000' }
    - { reg: bp, value: '0x0630' }
    - { reg: sp, value: '0xe1f0' }
    - { reg: r8w, value: '0x0000' }
    - { reg: r9w, value: '0x0003' }
    - { reg: r10w, value: '0x6010' }
    - { reg: r11w, value: '0x0020' }
    - { reg: r12w, value: '0x0500' }
    - { reg: r13w, value: '0xe2e0' }
    - { reg: r14w, value: '0x0000' }
    - { reg: r15w, value: '0x0000' }
    - { reg: ah, value: '0x00' }
    - { reg: bh, value: '0x00' }
    - { reg: ch, value: '0x62' }
    - { reg: dh, value: '0x62' }
    - { reg: al, value: '0x00' }
    - { reg: bl, value: '0x00' }
    - { reg: cl, value: '0x60' }
    - { reg: dl, value: '0x60' }
    - { reg: dil, value: '0x60' }
    - { reg: sil, value: '0x00' }
    - { reg: bpl, value: '0x30' }
    - { reg: spl, value: '0xf0' }
    - { reg: r8l, value: '0x00' }
    - { reg: r9l, value: '0x03' }
    - { reg: r10l, value: '0x10' }
    - { reg: r11l, value: '0x20' }
    - { reg: r12l, value: '0x00' }
    - { reg: r13l, value: '0xe0' }
    - { reg: r14l, value: '0x00' }
    - { reg: r15l, value: '0x00' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     1
body:             |
  bb.0:
    liveins: $rax, $rdi
  
    PUSH64r $rax, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 12, scope: !2)
    $rsi = MOV64rm $rdi, 1, $noreg, 8, $noreg, debug-location !DILocation(line: 13, column: 24, scope: !2)
    $rax = MOV64rm $rdi, 1, $noreg, 16, $noreg, debug-location !DILocation(line: 13, column: 31, scope: !2)
    $edx = crash-start MOV32rm $rax, 1, $noreg, 0, $noreg, debug-location !DILocation(line: 13, column: 27, scope: !2)
    $edi = MOV32ri 4196040, debug-location !DILocation(line: 13, column: 2, scope: !2)
    $eax = XOR32rr undef $eax, undef $eax, implicit-def $eflags, debug-location !DILocation(line: 13, column: 2, scope: !2)
    CALL64pcrel32 4195552, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 13, column: 2, scope: !2)
    $rax = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 14, column: 1, scope: !2)
    RET64 debug-location !DILocation(line: 14, column: 1, scope: !2)

...
---
name:            main
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x0000000000400630' }
    - { reg: rsp, value: '0x00007ffc2a59e200' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x0000000000400500' }
    - { reg: r13, value: '0x00007ffc2a59e2e0' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x000000000040062a' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x00400630' }
    - { reg: esp, value: '0x2a59e1f0' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0xe1f0' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     2
body:             |
  bb.0:
    liveins: $rax, $rip
  
    PUSH64r $rax, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 16, scope: !5)
    $edi = MOV32ri 2, debug-location !DILocation(line: 17, column: 7, scope: !5)
    CALL64pcrel32 4195568, implicit $rsp, implicit $ssp, implicit-def $rax, implicit-def $rax, debug-location !DILocation(line: 17, column: 7, scope: !5)
    MOV64mr $rip, 1, $noreg, 2099734, $noreg, $rax, debug-location !DILocation(line: 17, column: 5, scope: !5)
    $rdi = MOV64rr $rax, debug-location !DILocation(line: 18, column: 3, scope: !5)
    CALL64pcrel32 @foo, csr_64, implicit $rsp, implicit $ssp, implicit-def $eax, implicit-def $eax, debug-location !DILocation(line: 18, column: 3, scope: !5)
    $eax = crash-start XOR32rr undef $eax, undef $eax, implicit-def $eflags, debug-location !DILocation(line: 19, column: 3, scope: !5)
    $rcx = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 19, column: 3, scope: !5)
    RET64 debug-location !DILocation(line: 19, column: 3, scope: !5)

...
