#int * global_a;
#void func1(){
#   global_a = 0x0; // blame
#}
#void func2(){
#    *global_a = 20; // crash here
#}
#
#void caller1(){
#                func1(); // func1 not in bt
#                func2();
#}
#
#
#int main(){
#    caller1();
#}
#

# XFAIL: *

# RUN: %llvm-crash-analyzer-ta %s | FileCheck %s

## should be func1, but the taint op is rip + Offset, and the offset in func2 zero
## is loaded into rip + Offset2 where offset != Offset2.

# CHECK: Blame Function is func1

--- |
  ; ModuleID = 'crash-bt-caller-1'
  source_filename = "crash-bt-caller-1"
  target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
  
  ; Materializable
  define void @caller1() !dbg !2 {
  entry:
    unreachable
  }
  
  declare void @func1()
  
  declare void @func2()
  
  ; Materializable
  define void @func2.1() !dbg !5 {
  entry:
    unreachable
  }
  
  ; Materializable
  define void @main() !dbg !6 {
  entry:
    unreachable
  }
  
  ; Materializable
  define void @func1.2() !dbg !7 {
  entry:
    unreachable
  }
  
  !llvm.dbg.cu = !{!0}
  
  !0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "llvm-crash-analyzer", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
  !1 = !DIFile(filename: "/auto/compiler-migration/bseshadr/pac/llvm-crash-anal/c_test_cases/crash-bt-caller.c", directory: "/")
  !2 = distinct !DISubprogram(name: "caller1", linkageName: "caller1", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !3 = !DISubroutineType(types: !4)
  !4 = !{}
  !5 = distinct !DISubprogram(name: "func2.1", linkageName: "func2.1", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !6 = distinct !DISubprogram(name: "main", linkageName: "main", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)
  !7 = distinct !DISubprogram(name: "func1.2", linkageName: "func1.2", scope: null, file: !1, line: 1, type: !3, scopeLine: 1, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !4)

...
---
name:            func2.1
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '0x0000000000000000' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '0x00007f857d31c738' }
    - { reg: rdx, value: '0x00007ffc48ca3968' }
    - { reg: rdi, value: '0x0000000000000001' }
    - { reg: rsi, value: '0x00007ffc48ca3958' }
    - { reg: rbp, value: '0x0000000000400580' }
    - { reg: rsp, value: '0x00007ffc48ca3858' }
    - { reg: r8, value: '0x00007f857d31dda0' }
    - { reg: r9, value: '0x00007f857d31dda0' }
    - { reg: r10, value: '0x0000000000000000' }
    - { reg: r11, value: '0x00007f857d0df630' }
    - { reg: r12, value: '0x0000000000400450' }
    - { reg: r13, value: '0x00007ffc48ca3950' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x0000000000400557' }
    - { reg: rflags, value: '0x0000000000010246' }
    - { reg: cs, value: '0x0000000000000033' }
    - { reg: fs, value: '0x0000000000000000' }
    - { reg: gs, value: '0x0000000000000000' }
    - { reg: ss, value: '0x000000000000002b' }
    - { reg: ds, value: '0x0000000000000000' }
    - { reg: es, value: '0x0000000000000000' }
    - { reg: eax, value: '0x00000000' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '0x7d31c738' }
    - { reg: edx, value: '0x48ca3968' }
    - { reg: edi, value: '0x00000001' }
    - { reg: esi, value: '0x48ca3958' }
    - { reg: ebp, value: '0x00400580' }
    - { reg: esp, value: '0x48ca3858' }
    - { reg: r8d, value: '0x7d31dda0' }
    - { reg: r9d, value: '0x7d31dda0' }
    - { reg: r10d, value: '0x00000000' }
    - { reg: r11d, value: '0x7d0df630' }
    - { reg: r12d, value: '0x00400450' }
    - { reg: r13d, value: '0x48ca3950' }
    - { reg: r14d, value: '0x00000000' }
    - { reg: r15d, value: '0x00000000' }
    - { reg: ax, value: '0x0000' }
    - { reg: bx, value: '0x0000' }
    - { reg: cx, value: '0xc738' }
    - { reg: dx, value: '0x3968' }
    - { reg: di, value: '0x0001' }
    - { reg: si, value: '0x3958' }
    - { reg: bp, value: '0x0580' }
    - { reg: sp, value: '0x3858' }
    - { reg: r8w, value: '0xdda0' }
    - { reg: r9w, value: '0xdda0' }
    - { reg: r10w, value: '0x0000' }
    - { reg: r11w, value: '0xf630' }
    - { reg: r12w, value: '0x0450' }
    - { reg: r13w, value: '0x3950' }
    - { reg: r14w, value: '0x0000' }
    - { reg: r15w, value: '0x0000' }
    - { reg: ah, value: '0x00' }
    - { reg: bh, value: '0x00' }
    - { reg: ch, value: '0xc7' }
    - { reg: dh, value: '0x39' }
    - { reg: al, value: '0x00' }
    - { reg: bl, value: '0x00' }
    - { reg: cl, value: '0x38' }
    - { reg: dl, value: '0x68' }
    - { reg: dil, value: '0x01' }
    - { reg: sil, value: '0x58' }
    - { reg: bpl, value: '0x80' }
    - { reg: spl, value: '0x58' }
    - { reg: r8l, value: '0xa0' }
    - { reg: r9l, value: '0xa0' }
    - { reg: r10l, value: '0x00' }
    - { reg: r11l, value: '0x30' }
    - { reg: r12l, value: '0x50' }
    - { reg: r13l, value: '0x50' }
    - { reg: r14l, value: '0x00' }
    - { reg: r15l, value: '0x00' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     1
body:             |
  bb.0:
    liveins: $rip
  
    $rax = MOV64rm $rip, 1, $noreg, 2099921, $noreg, debug-location !DILocation(line: 6, column: 6, scope: !5)
    crash-start MOV32mi $rax, 1, $noreg, 0, $noreg, 20, debug-location !DILocation(line: 6, column: 15, scope: !5)
    RET64 debug-location !DILocation(line: 7, column: 1, scope: !5)

...
---
name:            caller1
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x0000000000400580' }
    - { reg: rsp, value: '0x00007ffc48ca3860' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x0000000000400450' }
    - { reg: r13, value: '0x00007ffc48ca3950' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x000000000040056b' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x00400580' }
    - { reg: esp, value: '0x48ca3858' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x3858' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     2
body:             |
  bb.0:
    liveins: $rax
  
    PUSH64r $rax, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 9, scope: !2)
    CALL64pcrel32 @func1, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 10, column: 17, scope: !2)
    CALL64pcrel32 @func2, csr_64, implicit $rsp, implicit $ssp, debug-location !DILocation(line: 11, column: 17, scope: !2)
    $rax = crash-start POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 12, column: 1, scope: !2)
    RET64 debug-location !DILocation(line: 12, column: 1, scope: !2)

...
---
name:            main
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: 
    - { reg: rax, value: '' }
    - { reg: rbx, value: '0x0000000000000000' }
    - { reg: rcx, value: '' }
    - { reg: rdx, value: '' }
    - { reg: rdi, value: '' }
    - { reg: rsi, value: '' }
    - { reg: rbp, value: '0x0000000000400580' }
    - { reg: rsp, value: '0x00007ffc48ca3870' }
    - { reg: r8, value: '' }
    - { reg: r9, value: '' }
    - { reg: r10, value: '' }
    - { reg: r11, value: '' }
    - { reg: r12, value: '0x0000000000400450' }
    - { reg: r13, value: '0x00007ffc48ca3950' }
    - { reg: r14, value: '0x0000000000000000' }
    - { reg: r15, value: '0x0000000000000000' }
    - { reg: rip, value: '0x0000000000400576' }
    - { reg: rflags, value: '' }
    - { reg: cs, value: '' }
    - { reg: fs, value: '' }
    - { reg: gs, value: '' }
    - { reg: ss, value: '' }
    - { reg: ds, value: '' }
    - { reg: es, value: '' }
    - { reg: eax, value: '' }
    - { reg: ebx, value: '0x00000000' }
    - { reg: ecx, value: '' }
    - { reg: edx, value: '' }
    - { reg: edi, value: '' }
    - { reg: esi, value: '' }
    - { reg: ebp, value: '0x00400580' }
    - { reg: esp, value: '0x48ca3858' }
    - { reg: r8d, value: '' }
    - { reg: r9d, value: '' }
    - { reg: r10d, value: '' }
    - { reg: r11d, value: '' }
    - { reg: r12d, value: '' }
    - { reg: r13d, value: '' }
    - { reg: r14d, value: '' }
    - { reg: r15d, value: '' }
    - { reg: ax, value: '' }
    - { reg: bx, value: '' }
    - { reg: cx, value: '' }
    - { reg: dx, value: '' }
    - { reg: di, value: '' }
    - { reg: si, value: '' }
    - { reg: bp, value: '' }
    - { reg: sp, value: '0x3858' }
    - { reg: r8w, value: '' }
    - { reg: r9w, value: '' }
    - { reg: r10w, value: '' }
    - { reg: r11w, value: '' }
    - { reg: r12w, value: '' }
    - { reg: r13w, value: '' }
    - { reg: r14w, value: '' }
    - { reg: r15w, value: '' }
    - { reg: ah, value: '' }
    - { reg: bh, value: '' }
    - { reg: ch, value: '' }
    - { reg: dh, value: '' }
    - { reg: al, value: '' }
    - { reg: bl, value: '' }
    - { reg: cl, value: '' }
    - { reg: dl, value: '' }
    - { reg: dil, value: '' }
    - { reg: sil, value: '' }
    - { reg: bpl, value: '' }
    - { reg: spl, value: '' }
    - { reg: r8l, value: '' }
    - { reg: r9l, value: '' }
    - { reg: r10l, value: '' }
    - { reg: r11l, value: '' }
    - { reg: r12l, value: '' }
    - { reg: r13l, value: '' }
    - { reg: r14l, value: '' }
    - { reg: r15l, value: '' } }
constants:       []
machineFunctionInfo: {}
crashOrder:     3
body:             |
  bb.0:
    liveins: $rax
  
    PUSH64r $rax, implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 15, scope: !6)
    CALL64pcrel32 @caller1, csr_64, implicit $rsp, implicit $ssp, implicit-def $eax, implicit-def $eax, debug-location !DILocation(line: 16, column: 5, scope: !6)
    $eax = crash-start XOR32rr undef $eax, undef $eax, implicit-def $eflags, debug-location !DILocation(line: 17, column: 1, scope: !6)
    $rcx = POP64r implicit-def $rsp, implicit $rsp, debug-location !DILocation(line: 17, column: 1, scope: !6)
    RET64 debug-location !DILocation(line: 17, column: 1, scope: !6)

...
---
name:            func1.2
alignment:       16
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
regInfo:         { GPRegs: [] }
constants:       []
machineFunctionInfo: {}
crashOrder:     0
body:             |
  bb.0:
    liveins: $rip
  
    MOV64mi32 $rip, 1, $noreg, 2099933, $noreg, 0, debug-location !DILocation(line: 3, column: 13, scope: !7)
    crash-start RET64 debug-location !DILocation(line: 4, column: 1, scope: !7)

...
